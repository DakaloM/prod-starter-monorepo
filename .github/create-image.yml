name: Deploy to Registry

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      DOCKER_IMAGE_REPOSITORY: ${{ secrets.DOCKER_IMAGE_REPOSITORY }}
      DOCKER_IMAGE_REGISTRY: ${{ secrets.DOCKER_IMAGE_REGISTRY }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set outputs
        id: vars
        run: |
          SHORT_SHA=`git rev-parse --short HEAD`
          DOCKER_TAG=`echo ${DOCKER_IMAGE_REPOSITORY}:${SHORT_SHA}`
          echo "::set-output name=sha_short::$SHORT_SHA"
          echo "::set-output name=docker_tag::$DOCKER_TAG"
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: --debug
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-
      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_IMAGE_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
      - name: Docker build and push with commit tag
        if: ${{ github.ref != 'refs/heads/main' }}
        uses: docker/build-push-action@v2
        with:
          file: ./apps/api/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE_REGISTRY }}/${{ steps.vars.outputs.docker_tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Docker build and push commit and latest tag
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/build-push-action@v2
        with:
          file: ./apps/api/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE_REGISTRY }}/${{ steps.vars.outputs.docker_tag }}
            ${{ env.DOCKER_IMAGE_REGISTRY }}/${{ env.DOCKER_IMAGE_REPOSITORY }}:latest
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE_REGISTRY }}/${{ env.DOCKER_IMAGE_REPOSITORY }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_IMAGE_REGISTRY }}/${{ env.DOCKER_IMAGE_REPOSITORY }}:buildcache,mode=max
